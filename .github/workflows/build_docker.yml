name: docker push

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  IMAGE_TAG: "latest"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set variables from .env file
        run: |
          mkdir ~/varz
          cat $(echo .env) | grep VERSION= | head -n 1 >> $GITHUB_ENV
          cat $(echo .env) | grep REGISTRY1= | head -n 1 >> $GITHUB_ENV
          cat $(echo .env) | grep REGISTRY1_REPO= | head -n 1 >> $GITHUB_ENV
          cat $(echo .env) | grep REGISTRY2_REPO= | head -n 1 >> $GITHUB_ENV
        #  cat $(echo .env) | grep VERSION= | head -n 1 | cut -d '=' -f 2- > ~/varz/VERSION
        #  echo "VERSION=$(cat ~/varz/VERSION)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to registry ${{ env.REGISTRY1 }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY1 }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to registry DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/386,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            ${{ env.REGISTRY1 }}/${{ env.REGISTRY1_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY1 }}/${{ env.REGISTRY1_REPO }}:${{ env.VERSION }}
            ${{ env.REGISTRY2_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY2_REPO }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max